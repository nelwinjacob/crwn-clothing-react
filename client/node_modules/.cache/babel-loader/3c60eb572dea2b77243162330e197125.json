{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedPrice, cartItem) => accumulatedPrice + cartItem.quantity * cartItem.price));","map":{"version":3,"sources":["/home/nelwin/Development/ReactProjects/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","accumulatedPrice","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAIA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEvCE,IAAF,IAAYA,IAAI,CAACE,SAFwB,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACLA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAChBD,mBAAmB,GAAGC,QAAQ,CAACC,QADhC,EAC0C,CAD1C,CAH0C,CAA3C;AAOP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IACRA,SAAS,CAACI,MAAV,CACI,CAACK,gBAAD,EAAmBH,QAAnB,KACCG,gBAAgB,GAAGH,QAAQ,CAACC,QAAT,GAAkBD,QAAQ,CAACI,KAFnD,CAHwC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\n\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    ( cart ) => cart.cartItems\n);\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => \n        cartItems.reduce((accumulatedQuantity, cartItem) => \n         accumulatedQuantity + cartItem.quantity, 0) \n);\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => \n     cartItems.reduce(\n         (accumulatedPrice, cartItem) =>\n          accumulatedPrice + cartItem.quantity*cartItem.price\n     )\n);\n\n\n"]},"metadata":{},"sourceType":"module"}